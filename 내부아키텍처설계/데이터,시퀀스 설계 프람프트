
Data 설계

유토스토리와 클래스 설계에 기반하여 Database 설계를 해보자. 
아래 조건을 반영해서 ERD를 PlantUML script로 만들어줘.
답변은 한글로 하고 복사하기 쉽도록 해줘. 

- 각 마이크로서비스는 자기 자신만의 Database를 가짐
  단, Event Driven Architecure는 적용 안할 것이므로 다른 마이크로서비스에 있는 데이터는 API를 통해 요청해야 함
- 마이크로서비스별로 설계: 회원(User), 마이썹(MySubGroup), 이체조회(TransferInquiry), 마이구독(MySub), 구독추천( SubRecommend) 
- 회원정보와 인증을 위한 계정정보는 테이블을 분리할 것임. 계정정보 테이블에는 id와 암호만 있으면 됨  
- 마이썹의 구독서비스 정보는 구독추천 마이크로서비스에게 요청할 것임 
- 마이구독의 구독서비스정보는 구독추천 마이크로서비스에게 요청할 것임
- 구독추천 서비스에는 서비스 구독은 마이구독 서비스에서 처리하므로 필요 없음
- 한 스크립트에 마이크로서비스별로 분리해서 보여줄 것
- 회원과 계정 테이블은 PK로 userId를 사용

Tip) 대화가 끊기지 않았다면 유저스토리, 클래스 설계 결과를 다시 줄 필요 없음

---
Sequence 다이어그램 설계

유저스토리와 클래스 설계 PlantUML을 꼼꼼하게 파악하여, 
아래 조건을 반영해서 시퀀스 다이어그램을 PlantUML script로 만들어줘.
답변은 한글로 하고 코드스타일로 만들어줘. 
- 각 마이크로서비스의 Controller클래스의 모든 API를 표시할 것
- 마이크로서비스 내부의 처리 흐름은 표시하지 않음
- 마이구독 서비스는 구독서비스 정보를 구독추천 서비스에 요청해야 함
- 마이그룹 서비스는 구독서비스 정보를 구독추천 서비스에 요청해야 함
- 마이그룹 서비스는 마이구독 서비스에 사용자가 가입한 구독서비스 정보를 요청해야 함
- 마이구독 서비스는 구독서비스 취소 시 그 서비스로 참여한 구독그룹이 있는지 마이그룹 서비스에 요청해야 함
- 그외에도 다른 마이크로서비스에 정보나 처리를 요청해야 한다면 표현할 것
- 요청만 표시하고 응답은 표시하지 말것
-------------

유저스토리, 클래스 설계 PlantUML, 시퀀스 다이어그램을 꼼꼼하게 파악하여, 
각 서비스 내부의 처리 흐름을 시퀀스 다이어그램 PlantUML script로 만들어줘.
답변은 한글로 하고 코드스타일로 만들어줘. 
- 대상 서비스: 마이구독 서비스 
- Controller클래스의 모든 API를 표시할 것
- 마이크로서비스 내부의 처리 흐름을 표시
- 다른 마이크로서비스에 정보나 처리를 요청해야 한다면 표현할 것
- 요청만 표시하고 응답은 표시하지 말것





유토스토리, 클래스 설계, 데이터베이스 설계에 기반하여 Sequence 다이어그램을 만들어 보자. 
아래 조건을 반영해서 시퀀스 다이어그램을 PlantUML script로 만들어줘.
답변은 한글로 하고 복사하기 쉽도록 해줘. 

- 서비스, 유저스토리, 수용기준을 꼼꼼히 파악할 것 
- 클래스 설계와 데이터 설계 결과를 반영할 것
- 각 마이크로서비스의 infra.in.web 클래스의 메소드가 누락되지 않도록 할 것
- 자신이 갖고 있지 않은 데이터가 필요한 경우 타 마이크로서비스와의 통신도 표현할 것 
- 마이썹의 구독서비스 정보는 구독추천 마이크로서비스에게 요청해야 함 
- 마이썹 서비스는 마이구독 서비스에 사용자가 가입한 구독서비스를 요청해야 함
- 마이구독의 구독서비스정보는 구독추천 마이크로서비스에게 요청해야 함
- 각 시퀀스는 구별해서 표시 
- 한 스크립트에 마이크로서비스별로 분리해서 보여줄 것

Tip) 대화가 끊기지 않았다면 유저스토리, 클래스 설계, 데이터베이스 설계 결과를 다시 줄 필요 없음
Tip) 응답이 길어 짤리면, 짤린 곳부터 계속 응답하라고 하면 됨
예) User -> MySubController: 구독 요약 목록 조회 요청(getSummarySubscriptions) 부터 계속 응답해줘.

Tip) 유저스토리, 클래스 설계, 데이터 설계를 이번 대화에서 처음 제공해야 때
유저스토리는 pdf파일, 클래스와 데이터 설계는 PlantUML scripte 텍스트 파일을 제공하면 됨

Tip) 누락된 controller 클래스 메소드가 있는 경우, 아래 예와 같이 누락된 메소드를 알려주고 다시 만들게 함
User의 요청 중 누락된 controller 클래스 메소드가 있어. 추가로 반영해서 다시 만들어줘
- 마이썹 서비스: leaveSubGroup
- 마이구독 서비스: getSubscriptionDetails, cancelSubscription
- 추천구독 서비스: getSubscriptionDetails

---

검토 및 보완하기

Sequence 다이어그램을 검토해서 수정이 필요한 부분을 요청해 가면서 클래스, 데이터, 시퀀스 다이어그램을 보완함
주의) 결과는 PlantUML script로 달라고 요청해야 함

예시)
마이썹 서비스가 'getTotalSubscriptionFee(userId)'를 수행할 때, 사용자가 가입한 구독 정보를 알려면 마이구독 서비스에 요청해야 하잖아. 마이구독 서비스에 필요한 메소드를 추가해서 클래스를 다시 설계해 주고, 시퀀스 다이어그램에도 반영해줘. 각각의 결과는 PlantUML script도 알려줘. 이제 부터 말 안해도 결과는 항상 PlantUML script로 해줘.

마이썹 서비스가 'getTotalMaxSavingAmount(userId)'를 수행할 때, 사용자가 가입한 구독 정보를 알려면 마이구독 서비스에 요청해야 하잖아. 마이구독 서비스에 필요한 메소드를 추가해서 클래스를 다시 설계해 주고, 시퀀스 다이어그램에도 반영해줘.
내 생각엔 마이구독 서비스는 사용자가 가입한 구독서비스 정보만 리턴하면 될 것 같은데 참고해줘.
내 생각이 맞다면 마이구독 서비스에 getUserSubscriptionFees메소드는 가입한 구독서비스 정보를 리턴하는 메소드를 같이 써도 될것 같아.

마이썹 서비스의 'getDetailSubGroup(subGroupId)' 에서 사용자가 썹 그룹에 참여하고 있는지 여부가 필요해. 마이썹 클래스와 시퀀스다이어그램, 그리고 수정 필요한 다른 곳이 있으면 알려줘.

getDetailSubGroup(subGroupId)에서 참여 멤버의 캐릭터ID와 이름이 필요해. 회원서비스의 Member 클래스에 캐릭터ID 추가와 사용자 ID를 배열로 요청하면 사용자 정보를 배열로 리턴하는 메소드를 추가해야 할 것 같아. 회원서비스 클래스와 데이터를 다시 설계해 줘. 그리고 시퀀스 다이어그램에도 반영해줘. 


getTransferHistory(subGroupId, period) 로 설계했는데, 여기서 period는 열거형(Eunum)으로 하는 게 좋을 것 같아. 그게 명확히 표현되도록 마이썹 서비스의 클래스, 이체조회 서비스 클래스, 시퀀스 다이어그램을 다시 설계해 줘.

마이구독의 getMySubscriptions(userId) 메소드가 리턴하는 각 구독서비스의 정보에는 이 구독서비스로 만들어진 썹 그룹에 참여하고 있는지 여부를 나타내는 필드가 있어야 해. 그걸 반영해서 마이썹 서비스 클래스, 마이구독 서비스 클래스, 시퀀스 다이어그램을 다시 설계해 줘.

왜 user가 마이구독 서비스의 'getMySubscriptions(userId)'메소드를 바로 호출하도록 않했지?

마이구독서비스의 getSubscriptionDetails(subscriptionId)에서 구독을 했는지 안 했는지 정보가 필요해. 마이구독 서비스 클래스와 시퀀스 다이어그램 수정이 필요하면 말해줘.

구독추천서비스의 'getRecommendedSubscriptions(userId, categoryId)'에서 'subscriptioncategoryrepository'에 findById(categoryId)과정은 불필요할 것 같아.
요청된 카테고리ID에 해당하는 구독서비스 정보만 리턴하면 돼. findBySubscriptionCategories(subscriptionCategories)도 요청되는 카테고리가 배열이 아니니까 수정되어야 해. 구독추천서비스의 클래스 설계와 시퀀스 다이어그램을 수정해 줘.




